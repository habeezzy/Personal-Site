{"version":3,"sources":["js\\index.js","..\\..\\..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\src\\builtins\\bundle-url.js","..\\..\\..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","document","querySelectorAll","i","length","module"],"mappings":";ACAA,IAAIA,YAAY,IAAhB;AACA,SAASC,kBAAT,GAA8B;AAC5B,ACFF,IAAIW,EDEE,CAACZ,MCFMa,GDEX,EAAgB,GCFG,cAAR,CAAb;ADGIb,gBAAYE,cAAZ;AACD,ACFH,SAASY,UAAT,CAAoBC,IAApB,EAA0B;AACxB,MAAIC,UAAUD,KAAKE,SAAL,EAAd;ADGA,ACFAD,SDEOhB,CCFCkB,MAAR,EDEA,CCFiB,YAAY;ADG9B,ACFGH,SAAKI,MAAL;AACD,GAFD;ADKF,ACFEH,SDEOd,CCFCkB,IAAR,GAAeL,IDEjB,CCFsBK,EDEE,ECFP,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCC,KAAKC,GAAL,EAA/C;ADGA,ACFAR,OAAKS,UAAL,CAAgBC,YAAhB,CAA6BT,OAA7B,EAAsCD,KAAKW,WAA3C;ADGA,ACFD,MDEK;AACF,ADZJ,UCYU,IAAIvB,KAAJ,EAAN;AACD,ACFH,GDAE,CAEE,ACFAwB,ODEOvB,GAAP,EAAY,CCFC,IAAjB;ADGI,ACFJ,QDEQC,CCFCuB,SDES,ACFlB,CDEmB,ECFE,GDEGxB,IAAIE,KAAV,EAAiBC,KAAjB,CAAuB,gCAAvB,CAAd;AACA,ACFF,MAAIoB,EDEEtB,OAAJ,CCFF,CDEe,CCFC;ADGZ,ACFF,aDESG,WAAWH,QAAQ,CAAR,CAAX,CAAP;AACD,ACFF;ADGA;ACDDsB,eAAaE,WAAW,YAAY;ADGpC,ACFE,QAAIC,CDEC,GAAP,ICFcC,SAASC,gBAAT,CAA0B,wBAA1B,CAAZ;ADGH,ACFG,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIH,MAAMI,MAA1B,EAAkCD,GAAlC,EAAuC;AACrC,UAAIrB,OAAOJ,UAAP,CAAkBsB,MAAMG,CAAN,EAASb,IAA3B,MAAqCR,OAAOV,YAAP,EAAzC,EAAgE;ADGtE,ACFQY,SDECN,UAAT,ACFmBsB,CDECrB,GAApB,EAAyB,ACFAwB,CAAN,CAAX;ADGN,ACFK,SDEE,CAAC,KAAKxB,GAAN,EAAWC,OAAX,CAAmB,uCAAnB,EAA4D,IAA5D,IAAoE,GAA3E;AACD,ACFI;;ADILC,ACFIgB,QDEIzB,SCFS,GDEjB,CCFI,EDEmBD,kBAAvB;AACAU,ACFG,GATY,EASV,EATU,CDWPH,ACXN,UDWF,GAAqBA,UAArB;ACDC;;AAED2B,OAAOxB,OAAP,GAAiBiB,SAAjB","file":"js.6bb4bb6f.map","sourceRoot":"..\\src","sourcesContent":["import '../scss/main.scss'\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}